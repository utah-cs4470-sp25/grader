
#include <math.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include "rt/runtime.h"

typedef struct { } void_t;

typedef struct {
    int64_t x;
    int64_t y;
} posn;

typedef struct {
  int64_t d0;
  posn *data;
} _a1_posn;

void jpl_main(struct args args) {
    int64_t _0 = 1;
    int64_t _1 = 2;
    posn _2 = { _0, _1 };
    int64_t _3 = 3;
    int64_t _4 = 4;
    posn _5 = { _3, _4 };
    int64_t _6 = 5;
    int64_t _7 = 6;
    posn _8 = { _6, _7 };
    _a1_posn _9;
    _9.d0 = 3;
    _9.data = jpl_alloc(sizeof(posn) * 3);
    _9.data[0] = _2;
    _9.data[1] = _5;
    _9.data[2] = _8;
    int64_t _10 = 2;
    if (_10 >= 0)
    goto _jump1;
    fail_assertion("negative array index");
    _jump1:;
    if (_10 < _9.d0)
    goto _jump2;
    fail_assertion("index too large");
    _jump2:;
    int64_t _11 = 0;
    _11 *= _9.d0;
    _11 += _10;
    posn _12 = _9.data[_11];
    show("(TupleType (IntType) (IntType))", &_12);
}

