
#include <math.h>
#include <stdbool.h>
#include <stdio.h>
#include "rt/runtime.h"

typedef struct { } void_t;
typedef struct {
  double r;
  double g;
  double b;
  double a;
} rgba;

typedef struct {
  long long d0;
  long long *data;
} _a1_long_long;

void jpl_main(struct args args) {
    long long _0 = 1ll;
    long long _1 = 2ll;
    long long _2 = 3ll;
    long long _3 = 4ll;
    long long _4 = 5ll;
    long long _5 = 6ll;
    long long _7 = 1ll;
    long long _8 = 2ll;
    long long _9 = 3ll;
    long long _10 = 4ll;
    long long _11 = 5ll;
    long long _12 = 6ll;
    _a1_long_long _6;
    _6.d0 = 6;
    _6.data = jpl_alloc(sizeof(long long) * 6);
    _6.data[0] = _7;
    _6.data[1] = _8;
    _6.data[2] = _9;
    _6.data[3] = _10;
    _6.data[4] = _11;
    _6.data[5] = _12;
    double _13 = 3.3;
    double _14 = exp(_13);
    double _15 = sqrt(_14);
    long long _16 = to_int(_15);
    if (_16 >= 0ll)
    goto _jump1;
    fail_assertion("negative array index");
    _jump1:;
    if (_16 < _6.d0)
    goto _jump2;
    fail_assertion("index too large");
    _jump2:;
    long long _17 = 0ll;
    _17 *= _6.d0;
    _17 += _16;
    long long _18 = _6.data[_17];
    show("(IntType)", &_18);
}

