
#include <math.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include "rt/runtime.h"

typedef struct { } void_t;

typedef struct {
  int64_t d0;
  rgba *data;
} _a1_rgba;

typedef struct {
  int64_t d0;
  _a1_rgba *data;
} _a1__a1_rgba;

typedef struct {
  int64_t d0;
  bool *data;
} _a1_bool;

void jpl_main(struct args args) {
    double _0 = 20.0;
    double _1 = 92.0;
    bool _2 = _0 > _1;
    bool _3 = !_2;
    double _4 = 69.0;
    double _5 = 48.0;
    double _6 = _5 * _4;
    bool _7 = _6 == _4;
    show("(BoolType)", &_7);
    double _8 = 5.0;
    rgba _9 = { _4, _8, _4, _4 };
    _a1_rgba _10;
    _10.d0 = 1;
    _10.data = jpl_alloc(sizeof(rgba) * 1);
    _10.data[0] = _9;
    _a1__a1_rgba _11;
    _11.d0 = 1;
    _11.data = jpl_alloc(sizeof(_a1_rgba) * 1);
    _11.data[0] = _10;
    int64_t _12 = 937;
    int64_t _13 = 680;
    int64_t _14 = _12 - _13;
    int64_t _15 = -_14;
    if (_15 >= 0)
    goto _jump1;
    fail_assertion("negative array index");
    _jump1:;
    if (_15 < _11.d0)
    goto _jump2;
    fail_assertion("index too large");
    _jump2:;
    int64_t _16 = 0;
    _16 *= _11.d0;
    _16 += _15;
    _a1_rgba _17 = _11.data[_16];
    bool _18 = false;
    double _19 = -_4;
    double _20 = _4 + _19;
    double _21 = 25.0;
    bool _22 = _20 != _21;
    _a1_bool _23;
    _23.d0 = 2;
    _23.data = jpl_alloc(sizeof(bool) * 2);
    _23.data[0] = _18;
    _23.data[1] = _22;
    double _24 = _4 + _4;
    double _25 = -_24;
    bool _26 = _4 != _4;
    if (0 != _26)
    goto _jump3;
    fail_assertion("h");
    _jump3:;
}

