
#include <math.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include "rt/runtime.h"

typedef struct { } void_t;

typedef struct {
  int64_t d0;
  rgba *data;
} _a1_rgba;

typedef struct {
  int64_t d0;
  _a1_rgba *data;
} _a1__a1_rgba;

typedef struct {
    double a;
} g;

void jpl_main(struct args args) {
    int64_t _0 = 663;
    int64_t _1 = 207;
    int64_t _2 = _0 + _1;
    int64_t _3 = 930;
    bool _4 = _2 == _3;
    bool _5 = !_4;
    double _6 = 56.0;
    int64_t _7 = 334;
    int64_t _8 = 617;
    bool _9 = true;
    show("(BoolType)", &_9);
    double _10 = 34.0;
    double _11 = 51.0;
    double _12 = 18.0;
    rgba _13 = { _6, _10, _11, _12 };
    double _14 = 23.0;
    double _15 = 28.0;
    rgba _16 = { _14, _6, _15, _6 };
    _a1_rgba _17;
    _17.d0 = 2;
    _17.data = jpl_alloc(sizeof(rgba) * 2);
    _17.data[0] = _13;
    _17.data[1] = _16;
    _a1__a1_rgba _18;
    _18.d0 = 1;
    _18.data = jpl_alloc(sizeof(_a1_rgba) * 1);
    _18.data[0] = _17;
    if (_7 >= 0)
    goto _jump1;
    fail_assertion("negative array index");
    _jump1:;
    if (_7 < _18.d0)
    goto _jump2;
    fail_assertion("index too large");
    _jump2:;
    int64_t _19 = 0;
    _19 *= _18.d0;
    _19 += _7;
    _a1_rgba _20 = _18.data[_19];
    double _21 = 72.0;
}

