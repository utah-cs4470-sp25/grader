
#include <math.h>
#include <stdbool.h>
#include <stdio.h>
#include "rt/runtime.h"

typedef struct { } void_t;
typedef struct {
  double r;
  double g;
  double b;
  double a;
} rgba;

typedef struct {
  long long d0;
  bool *data;
} _a1_bool;

typedef struct {
  long long d0;
  _a1_bool *data;
} _a1__a1_bool;

typedef struct {
  long long d0;
  long long *data;
} _a1_long_long;

void jpl_main(struct args args) {
    bool _0 = true;
    double _1 = 11.94;
    double _2 = 23.06;
    double _3 = _1 * _2;
    double _4 = 63.36;
    bool _5 = _3 <= _4;
    bool _6 = false;
    double _8 = 11.94;
    double _9 = 23.06;
    double _10 = _8 * _9;
    double _11 = 63.36;
    bool _12 = _10 <= _11;
    bool _13 = false;
    _a1_bool _7;
    _7.d0 = 2;
    _7.data = jpl_alloc(sizeof(bool) * 2);
    _7.data[0] = _12;
    _7.data[1] = _13;
    double _15 = 11.94;
    double _16 = 23.06;
    double _17 = _15 * _16;
    double _18 = 63.36;
    bool _19 = _17 <= _18;
    bool _20 = false;
    double _22 = 11.94;
    double _23 = 23.06;
    double _24 = _22 * _23;
    double _25 = 63.36;
    bool _26 = _24 <= _25;
    bool _27 = false;
    _a1_bool _21;
    _21.d0 = 2;
    _21.data = jpl_alloc(sizeof(bool) * 2);
    _21.data[0] = _26;
    _21.data[1] = _27;
    _a1__a1_bool _14;
    _14.d0 = 1;
    _14.data = jpl_alloc(sizeof(_a1_bool) * 1);
    _14.data[0] = _21;
    long long _28 = 779ll;
    long long _30 = 779ll;
    _a1_long_long _29;
    _29.d0 = 2;
    _29.data = jpl_alloc(sizeof(long long) * 2);
    _29.data[0] = _14.d0;
    _29.data[1] = _30;
    long long _31 = 754ll;
    if (_31 >= 0ll)
    goto _jump1;
    fail_assertion("negative array index");
    _jump1:;
    if (_31 < _29.d0)
    goto _jump2;
    fail_assertion("index too large");
    _jump2:;
    long long _32 = 0ll;
    _32 *= _29.d0;
    _32 += _31;
    long long _33 = _29.data[_32];
    long long _34 = 211ll;
    long long _36 = 211ll;
    _a1_long_long _35;
    _35.d0 = 2;
    _35.data = jpl_alloc(sizeof(long long) * 2);
    _35.data[0] = _14.d0;
    _35.data[1] = _36;
    long long _37 = _14.d0 - _14.d0;
    if (_37 >= 0ll)
    goto _jump3;
    fail_assertion("negative array index");
    _jump3:;
    if (_37 < _35.d0)
    goto _jump4;
    fail_assertion("index too large");
    _jump4:;
    long long _38 = 0ll;
    _38 *= _35.d0;
    _38 += _37;
    long long _39 = _35.data[_38];
    long long _40 = _33 - _39;
    long long _41 = 334ll;
    long long _42 = -_41;
    long long _43 = -_42;
    long long _44 = _40 * _43;
    print("g");
}

