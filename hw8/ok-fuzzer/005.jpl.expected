
#include <math.h>
#include <stdbool.h>
#include <stdio.h>
#include "rt/runtime.h"

typedef struct { } void_t;
typedef struct {
  double r;
  double g;
  double b;
  double a;
} rgba;

typedef struct {
  long long d0;
  long long *data;
} _a1_long_long;

typedef struct {
  long long d0;
  _a1_long_long *data;
} _a1__a1_long_long;

void jpl_main(struct args args) {
    bool _0 = false;
    long long _1 = 741ll;
    long long _2 = 343ll;
    long long _3 = _1 * _2;
    long long _4 = 634ll;
    long long _5 = -_4;
    long long _7 = 741ll;
    long long _8 = 343ll;
    long long _9 = _7 * _8;
    long long _10 = 634ll;
    long long _11 = -_10;
    _a1_long_long _6;
    _6.d0 = 2;
    _6.data = jpl_alloc(sizeof(long long) * 2);
    _6.data[0] = _9;
    _6.data[1] = _11;
    long long _13 = 741ll;
    long long _14 = 343ll;
    long long _15 = _13 * _14;
    long long _16 = 634ll;
    long long _17 = -_16;
    long long _19 = 741ll;
    long long _20 = 343ll;
    long long _21 = _19 * _20;
    long long _22 = 634ll;
    long long _23 = -_22;
    _a1_long_long _18;
    _18.d0 = 2;
    _18.data = jpl_alloc(sizeof(long long) * 2);
    _18.data[0] = _21;
    _18.data[1] = _23;
    _a1__a1_long_long _12;
    _12.d0 = 1;
    _12.data = jpl_alloc(sizeof(_a1_long_long) * 1);
    _12.data[0] = _18;
    long long _24 = 465ll;
    long long _25 = 43ll;
    long long _26 = -_25;
    long long _28 = 465ll;
    long long _29 = 43ll;
    long long _30 = -_29;
    _a1_long_long _27;
    _27.d0 = 2;
    _27.data = jpl_alloc(sizeof(long long) * 2);
    _27.data[0] = _28;
    _27.data[1] = _30;
    long long _31 = 660ll;
    long long _32 = 821ll;
    long long _33 = _31 + _32;
    long long _34 = 6ll;
    long long _35 = _33 - _34;
    if (_35 >= 0ll)
    goto _jump1;
    fail_assertion("negative array index");
    _jump1:;
    if (_35 < _27.d0)
    goto _jump2;
    fail_assertion("index too large");
    _jump2:;
    long long _36 = 0ll;
    _36 *= _27.d0;
    _36 += _35;
    long long _37 = _27.data[_36];
    if (_37 >= 0ll)
    goto _jump3;
    fail_assertion("negative array index");
    _jump3:;
    if (_37 < _12.d0)
    goto _jump4;
    fail_assertion("index too large");
    _jump4:;
    long long _38 = 0ll;
    _38 *= _12.d0;
    _38 += _37;
    _a1_long_long _39 = _12.data[_38];
    show("(IntType)", &_39.d0);
    double _40 = 28.55;
    long long _41 = -_39.d0;
    long long _42 = -_41;
    long long _43 = 970ll;
    long long _44 = -_43;
    long long _45 = _42 % _44;
    show("(IntType)", &_45);
    print("h");
}

