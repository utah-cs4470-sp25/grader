
#include <math.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include "rt/runtime.h"

typedef struct { } void_t;

typedef struct {
  int64_t d0;
  int64_t d1;
  bool *data;
} _a2_bool;

typedef struct {
    _a2_bool a;
} a;

typedef struct {
    a a;
    a b;
} e;

typedef struct {
  int64_t d0;
  int64_t *data;
} _a1_int64_t;

typedef struct {
    void_t a;
    double b;
} h;

void jpl_main(struct args args) {
    double _0 = 76.0;
    double _1 = 17.0;
    double _2 = -_1;
    double _3 = 85.0;
    double _4 = _2 * _3;
    double _5 = -_4;
    bool _6 = _0 < _5;
    double _7 = 17.0;
    double _8 = 31.0;
    double _9 = -_8;
    double _10 = -_9;
    double _11 = _7 * _10;
    double _12 = 30.0;
    double _13 = 43.0;
    double _14 = -_13;
    double _15 = _12 + _14;
    double _16 = -_15;
    double _17 = _11 - _16;
    int64_t _18 = 436;
    int64_t _19 = -_18;
    int64_t _20 = 767;
    int64_t _21 = _19 + _20;
    int64_t _22 = 353;
    int64_t _23 = _21 % _22;
    int64_t _24 = 118;
    int64_t _25 = 124;
    int64_t _26 = _24 * _25;
    int64_t _27 = 634;
    int64_t _28 = _26 - _27;
    int64_t _29 = 777;
    int64_t _30 = -_29;
    int64_t _31 = -_30;
    int64_t _32 = _28 - _31;
    bool _33 = _23 != _32;
    int64_t _34 = 66;
    _a1_int64_t _35;
    _35.d0 = 1;
    _35.data = jpl_alloc(sizeof(int64_t) * 1);
    _35.data[0] = _34;
    show("(BoolType)", &_33);
}

