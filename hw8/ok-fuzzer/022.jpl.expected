
#include <math.h>
#include <stdbool.h>
#include <stdio.h>
#include "rt/runtime.h"

typedef struct { } void_t;
typedef struct {
  double r;
  double g;
  double b;
  double a;
} rgba;

typedef struct {
    bool a;
    rgba b;
} d;

typedef struct {
  long long d0;
  long long *data;
} _a1_long_long;

void jpl_main(struct args args) {
    print("a");
    double _0 = 87.83;
    double _1 = -_0;
    double _2 = -_1;
    double _3 = -_2;
    double _4 = 63.82;
    double _5 = 83.57;
    double _6 = -_5;
    double _7 = 38.95;
    double _8 = 6.25;
    double _9 = 43.95;
    double _10 = fmod(_8, _9);
    rgba _11 = { _4, _6, _7, _10 };
    double _12 = _11.r;
    double _13 = _3 + _12;
    long long _14 = 611ll;
    long long _15 = -_14;
    long long _16 = 194ll;
    long long _17 = _15 / _16;
    long long _18 = 990ll;
    long long _19 = -_18;
    long long _20 = 890ll;
    long long _21 = _19 - _20;
    long long _22 = 496ll;
    long long _23 = 256ll;
    long long _24 = _22 % _23;
    long long _25 = -_24;
    long long _26 = _21 * _25;
    bool _27 = _17 == _26;
    if (0 != _27)
    goto _jump1;
    fail_assertion("b");
    _jump1:;
    bool _28 = false;
    show("(BoolType)", &_28);
    double _29 = -_13;
    double _30 = -_29;
    double _31 = 72.85;
    double _32 = _30 - _31;
    double _33 = fmod(_13, _32);
    long long _34 = 936ll;
    long long _35 = -_34;
    long long _37 = 936ll;
    long long _38 = -_37;
    _a1_long_long _36;
    _36.d0 = 1;
    _36.data = jpl_alloc(sizeof(long long) * 1);
    _36.data[0] = _38;
    long long _39 = 568ll;
    long long _40 = 987ll;
    long long _41 = _39 * _40;
    if (_41 >= 0ll)
    goto _jump2;
    fail_assertion("negative array index");
    _jump2:;
    if (_41 < _36.d0)
    goto _jump3;
    fail_assertion("index too large");
    _jump3:;
    long long _42 = 0ll;
    _42 *= _36.d0;
    _42 += _41;
    long long _43 = _36.data[_42];
    long long _44 = 356ll;
    long long _45 = 437ll;
    long long _46 = _44 / _45;
    bool _47 = _43 < _46;
}

