
#include <math.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include "rt/runtime.h"

typedef struct { } void_t;

typedef struct {
  int64_t d0;
  double *data;
} _a1_double;

typedef struct {
  int64_t d0;
  rgba *data;
} _a1_rgba;

typedef struct {
  int64_t d0;
  _a1_rgba *data;
} _a1__a1_rgba;

typedef struct {
  int64_t d0;
  void_t *data;
} _a1_void_t;

typedef struct {
    _a1_void_t a;
    double b;
} e;

void jpl_main(struct args args) {
    double _0 = 42.0;
    double _1 = 73.0;
    double _2 = 25.0;
    _a1_double _3;
    _3.d0 = 1;
    _3.data = jpl_alloc(sizeof(double) * 1);
    _3.data[0] = _2;
    int64_t _4 = 574;
    if (_4 >= 0)
    goto _jump1;
    fail_assertion("negative array index");
    _jump1:;
    if (_4 < _3.d0)
    goto _jump2;
    fail_assertion("index too large");
    _jump2:;
    int64_t _5 = 0;
    _5 *= _3.d0;
    _5 += _4;
    double _6 = _3.data[_5];
    double _7 = fmod(_1, _6);
    bool _8 = _0 < _7;
    if (0 != _8)
    goto _jump3;
    fail_assertion("a");
    _jump3:;
    double _9 = 10.0;
    double _10 = 27.0;
    double _11 = _9 / _10;
    double _12 = 51.0;
    double _13 = -_12;
    double _14 = 46.0;
    double _15 = 26.0;
    double _16 = -_15;
    rgba _17 = { _11, _13, _14, _16 };
    double _18 = 84.0;
    double _19 = 72.0;
    double _20 = 32.0;
    double _21 = 66.0;
    rgba _22 = { _18, _19, _20, _21 };
    _a1_rgba _23;
    _23.d0 = 2;
    _23.data = jpl_alloc(sizeof(rgba) * 2);
    _23.data[0] = _17;
    _23.data[1] = _22;
    _a1__a1_rgba _24;
    _24.d0 = 1;
    _24.data = jpl_alloc(sizeof(_a1_rgba) * 1);
    _24.data[0] = _23;
    print("b");
    int64_t _25 = 939;
    if (_25 >= 0)
    goto _jump4;
    fail_assertion("negative array index");
    _jump4:;
    if (_25 < _24.d0)
    goto _jump5;
    fail_assertion("index too large");
    _jump5:;
    int64_t _26 = 0;
    _26 *= _24.d0;
    _26 += _25;
    _a1_rgba _27 = _24.data[_26];
    show("(ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 1)", &_27);
    bool _28 = true;
    show("(BoolType)", &_28);
    double _29 = 53.0;
}

