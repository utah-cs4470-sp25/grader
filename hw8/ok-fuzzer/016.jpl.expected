
#include <math.h>
#include <stdbool.h>
#include <stdio.h>
#include "rt/runtime.h"

typedef struct { } void_t;
typedef struct {
  double r;
  double g;
  double b;
  double a;
} rgba;

typedef struct {
    double a;
} a;

typedef struct {
  long long d0;
  long long *data;
} _a1_long_long;

typedef struct {
  long long d0;
  _a1_long_long *data;
} _a1__a1_long_long;

typedef struct {
    bool a;
} d;

typedef struct {
  long long d0;
  d *data;
} _a1_d;

typedef struct {
    d a;
} g;

void jpl_main(struct args args) {
    long long _0 = 225ll;
    long long _1 = 737ll;
    long long _2 = -_1;
    long long _3 = _0 * _2;
    long long _4 = 602ll;
    long long _5 = -_4;
    long long _6 = 182ll;
    long long _7 = -_6;
    long long _8 = _5 * _7;
    long long _9 = 887ll;
    long long _10 = _8 - _9;
    long long _12 = 225ll;
    long long _13 = 737ll;
    long long _14 = -_13;
    long long _15 = _12 * _14;
    long long _16 = 602ll;
    long long _17 = -_16;
    long long _18 = 182ll;
    long long _19 = -_18;
    long long _20 = _17 * _19;
    long long _21 = 887ll;
    long long _22 = _20 - _21;
    _a1_long_long _11;
    _11.d0 = 2;
    _11.data = jpl_alloc(sizeof(long long) * 2);
    _11.data[0] = _15;
    _11.data[1] = _22;
    _a1__a1_long_long _23;
    _23.d0 = 1;
    _23.data = jpl_alloc(sizeof(_a1_long_long) * 1);
    _23.data[0] = _11;
    long long _24 = 744ll;
    if (_24 >= 0ll)
    goto _jump1;
    fail_assertion("negative array index");
    _jump1:;
    if (_24 < _23.d0)
    goto _jump2;
    fail_assertion("index too large");
    _jump2:;
    long long _25 = 0ll;
    _25 *= _23.d0;
    _25 += _24;
    _a1_long_long _26 = _23.data[_25];
    long long _27 = 654ll;
    long long _28 = -_27;
    if (_28 >= 0ll)
    goto _jump3;
    fail_assertion("negative array index");
    _jump3:;
    if (_28 < _26.d0)
    goto _jump4;
    fail_assertion("index too large");
    _jump4:;
    long long _29 = 0ll;
    _29 *= _26.d0;
    _29 += _28;
    long long _30 = _26.data[_29];
    long long _31 = -_30;
    double _32 = 20.05;
    a _33 = { _32 };
    double _34 = _33.a;
    double _35 = 51.61;
    double _36 = -_35;
    double _37 = -_36;
    bool _38 = _34 == _37;
    if (0 != _38)
    goto _jump5;
    fail_assertion("e");
    _jump5:;
    bool _39 = false;
    d _40 = { _39 };
    bool _41 = _40.a;
    d _42 = { _41 };
    bool _43 = _31 == _31;
    d _44 = { _43 };
    bool _46 = false;
    d _47 = { _46 };
    bool _48 = _47.a;
    d _49 = { _48 };
    bool _50 = _31 == _31;
    d _51 = { _50 };
    _a1_d _45;
    _45.d0 = 2;
    _45.data = jpl_alloc(sizeof(d) * 2);
    _45.data[0] = _49;
    _45.data[1] = _51;
}

