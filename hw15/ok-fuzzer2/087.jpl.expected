global jpl_main
global _jpl_main
extern _fail_assertion
extern _jpl_alloc
extern _get_time
extern _show
extern _print
extern _print_time
extern _read_image
extern _write_image
extern _fmod
extern _sqrt
extern _exp
extern _sin
extern _cos
extern _tan
extern _asin
extern _acos
extern _atan
extern _log
extern _pow
extern _atan2
extern _to_int
extern _to_float

section .data
const0: dq 377
const1: dq 343
const2: dq 886
const3: db `mod by zero`, 0
const4: dq 853
const5: dq 660
const6: db `c.png`, 0
const7: db `d.png`, 0

section .text
jpl_main:
_jpl_main:
	push rbp
	mov rbp, rsp
	push r12
	mov r12, rbp ; end of jpl_main prelude
	mov rax, [rel const0] ; 377
	push rax
	mov rax, [rel const1] ; 343
	push rax
	pop rax
	neg rax
	push rax
	mov rax, [rel const2] ; 886
	push rax
	pop rax
	pop r10
	cmp r10, 0
	jne .jump1
	lea rdi, [rel const3] ; 'mod by zero'
	call _fail_assertion
.jump1:
	cqo
	idiv r10
	mov rax, rdx
	push rax
	pop rax
	pop r10
	cmp rax, r10
	sete al
	and rax, 1
	push rax
	call _get_time
	sub rsp, 8
	movsd [rsp], xmm0
	mov rax, [rel const4] ; 853
	push rax
	mov rax, [rel const5] ; 660
	push rax
	pop rax
	neg rax
	push rax
	pop rax
	pop r10
	imul rax, r10
	push rax
	call _get_time
	sub rsp, 8
	movsd [rsp], xmm0
	movsd xmm0, [rsp]
	add rsp, 8
	movsd xmm1, [rsp + 8]
	subsd xmm0, xmm1
	call _print_time
	sub rsp, 24
	lea rdi, [rsp]
	sub rsp, 8 ; Add alignment
	lea rsi, [rel const6] ; 'c.png'
	call _read_image
	add rsp, 8 ; Remove alignment
	sub rsp, 24
	lea rdi, [rsp]
	lea rsi, [rel const7] ; 'd.png'
	call _read_image
	add rsp, 72 ; Local variables
	pop r12 ; begin jpl_main postlude
	pop rbp
	ret

