global jpl_main
global _jpl_main
extern _fail_assertion
extern _jpl_alloc
extern _get_time
extern _show
extern _print
extern _print_time
extern _read_image
extern _write_image
extern _fmod
extern _sqrt
extern _exp
extern _sin
extern _cos
extern _tan
extern _asin
extern _acos
extern _atan
extern _log
extern _pow
extern _atan2
extern _to_int
extern _to_float

section .data
const0: dq 0
const1: dq 1
const2: db `a`, 0
const3: db `b.png`, 0
const4: db `c.png`, 0

section .text
jpl_main:
_jpl_main:
	push rbp
	mov rbp, rsp
	push r12
	mov r12, rbp ; end of jpl_main prelude
	mov rax, [rel const0] ; False
	push rax
	pop rax
	cmp rax, 0
	je .jump1
	mov rax, [rel const1] ; True
	push rax
	pop rax
	xor rax, 1
	push rax
	pop rax
.jump1:
	push rax
	pop rax
	cmp rax, 0
	je .jump2
	mov rax, [rel const1] ; True
	push rax
	pop rax
	xor rax, 1
	push rax
	jmp .jump3
.jump2:
	mov rax, [rel const1] ; True
	push rax
	pop rax
	xor rax, 1
	push rax
	pop rax
	xor rax, 1
	push rax
.jump3:
	pop rax
	cmp rax, 0
	jne .jump4
	sub rsp, 8 ; Add alignment
	lea rdi, [rel const2] ; 'a'
	call _fail_assertion
	add rsp, 8 ; Remove alignment
.jump4:
	sub rsp, 24
	lea rdi, [rsp]
	lea rsi, [rel const3] ; 'b.png'
	call _read_image
	sub rsp, 24
	lea rdi, [rsp]
	sub rsp, 8 ; Add alignment
	lea rsi, [rel const4] ; 'c.png'
	call _read_image
	add rsp, 8 ; Remove alignment
	add rsp, 48 ; Local variables
	pop r12 ; begin jpl_main postlude
	pop rbp
	ret

