let a = 93.57
let b = a
let c = (a <= a)
let d = (! ((b - b) < (b - b)))
show d

let e = (b / 90.08)
let f = (- (- e))
let g = e
let h = (863 * (- (- (- 848))))
let i = (- b)
fn j(k : bool, l : bool, m : float) : float {
  let n = (((- (- 109)) / 27) - 37)
  let o = h
  let p = i
  let q = (- f)
  let r = o
  let s = (b < f)
  let t = (h < h)
  let u = 891
  let v = (e * b)
  let w = k
  return (- m)
}

let k = (! (c != (! d)))
fn l(m : bool, n : bool, o : bool) : int {
  return h
  return (- h)
  let p = n
  return (- (- 785))
  let q = a
  let r = 828
  let s = 988
  let t = f
  let u = s
  let v = j(p, true, q)
  return (- h)
}

let m = f
let n = c
let o = (! false)
let p = o
fn q(r : float, s : bool) : int {
  let t = (l(((m - (g + f)) <= j(c, o, j(true, true, ((b * e) * r)))), o, s) >= l(false, (o == d), d))
  let u = (s == false)
  let v = b
  let w = k
  let x = w
  let y = s
  let z = l(u, (! true), (! (j(d, c, a) >= i)))
  let A = (! s)
  let B = A
  let C = 12
  return ((- 213) / 479)
}

show b

let r = c
let s = 708
let t = (! d)
let u = c
let v = q(a, k)
let w = i
let x = o
let y = i
let z = (q(e, c) < q(y, t))
let A = c
fn B() : int {
  let C = i
  let D = j(A, k, j(d, x, i))
  return q(j(c, o, 31.51), k)
  let E = j(z, ((- l(z, d, c)) <= l(true, true, r)), (- e))
  let F = w
  let G = n
  let H = q(m, A)
  return h
  let I = b
  let J = t
  return (- h)
}

let C = z
let D = e
let E = h
let F = t
let G = j(p, r, (92.64 + g))
let H = x
show C

show s

fn I(J : int, K : bool, L : bool) : float {
  let M = x
  return j(H, C, i)
  let N = D
  let O = r
  return e
  let P = (- q(N, p))
  let Q = s
  return (y * m)
  return b
  let R = F
  return b
}

let J = h
let K = h
let L = H
let M = (- b)
show v

fn N(O : float, P : float, Q : int) : bool {
  let R = C
  let S = R
  let T = l(z, R, C)
  let U = z
  let V = (G == y)
  return x
  let W = r
  let X = g
  let Y = u
  let Z = V
  return t
}

let O = d
let P = L
let Q = d
let R = s
fn S(T : int) : bool {
  let U = Q
  let V = 443
  let W = v
  let X = u
  let Y = o
  let Z = D
  let aa = t
  let ab = f
  let ac = t
  let ad = 69.75
  return C
}

let T = n
let U = R
let V = r
let W = p
let X = w
let Y = D
fn Z(aa : bool, ab : bool) : bool {
  let ac = O
  let ad = M
  let ae = t
  let af = ae
  let ag = false
  return O
  return (! o)
  let ah = O
  let ai = x
  let aj = v
  return S(s)
}

fn aa(ab : float) : bool {
  let ac = T
  let ad = m
  let ae = t
  let af = j(true, true, ab)
  let ag = S(s)
  let ah = W
  let ai = y
  return d
  let aj = t
  return F
  return (E < v)
}

fn ab(ac : bool, ad : bool) : bool {
  let ae = p
  let af = B()
  let ag = p
  let ah = x
  let ai = v
  let aj = J
  let ak = Q
  return L
  let al = aj
  let am = ag
  return T
}

fn ac(ad : float) : int {
  let ae = k
  return q(g, V)
  let af = x
  let ag = ab((ad != (- b)), c)
  let ah = s
  let ai = s
  return E
  let aj = t
  let ak = ab(N(e, m, ai), n)
  let al = t
  return E
}

